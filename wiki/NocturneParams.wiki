#summary Nocturne params

= Introduction =

Parameters description


= Details =

|| *Parameter name* || *Default* || *Values / example* || *Meaning* || *Type in Java* ||
|| nocturne.debug || Default value is "false" || "true" or "false" || Use it in the development mode to switch on nocturne main feature: class reloading ||  {{{boolean}}} ||
|| nocturne.templates-paths || Default value is empty string (no template directories) || WEB-INF/templates;WEB-INF/templates-for-login || directory (or directories) where to find templates in the deployed application, all the freemarker templates for view layer should be in it || {{{List<File>}}} ||
|| nocturne.reloading-class-paths || Default value is empty string (no directories for class reloading) || Values depends on development home directory and IDEA you are using || In the debug mode the application will load classes from specified directories on each request || {{{List<File>}}} ||
|| nocturne.page-request-listeners || Default value is empty string (no request listeners) || Classes separated with ";" || Listener classes for requests dispatching by nocturne || {{{?}}} ||
|| nocturne.guice-module-class-name || Default value is empty string (no module specified) || Class name implementing com.google.inject.Module || Nocturne uses google-guice as default IoC container || {{{Class<? com.google.inject.Module>}}} ||
|| nocturne.skip-regex || Default value is empty string (do not skip) || Example: /(css|image|js)/.* || Regex to describe URLs to be skipped by nocturne  || {{{Pattern}}} ||
|| nocturne.class-reloading-packages || Default value is empty string (do not reload) || You can specify several packages separated with ";" || All classes in specified packages will be reloaded || {{{List<String>}}} ||
|| nocturne.class-reloading-exceptions || Default value is empty string (no exceptions) || You can specify several packages or class names separated with ";" || Exceptions for nocturne.class-reloading-package: specified classes (or classes in specified directories) will not be reloaded  || {{{List<String>}}} ||